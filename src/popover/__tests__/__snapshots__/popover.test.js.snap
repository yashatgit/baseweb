// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Popover component as anchor 1`] = `
<Popover
  accessibilityType="menu"
  autoFocus={true}
  content={
    <strong>
      Hello world
    </strong>
  }
  focusLock={false}
  ignoreBoundary={false}
  isOpen={true}
  onClick={[MockFunction]}
  onMouseEnterDelay={200}
  onMouseLeaveDelay={200}
  overrides={Object {}}
  placement="auto"
  renderAll={false}
  returnFocus={true}
  showArrow={false}
  triggerType="click"
>
  <CustomComponent
    aria-controls="bui-mock-id"
    aria-expanded="true"
    aria-haspopup="true"
    key="popover-anchor"
    onClick={[Function]}
  >
    <MockStyledComponent
      aria-controls="bui-mock-id"
      aria-expanded="true"
      aria-haspopup="true"
      forwardedRef={
        Object {
          "current": <span
            aria-controls="bui-mock-id"
            aria-expanded="true"
            aria-haspopup="true"
            styled-component="true"
            test-style="[object Object]"
          />,
        }
      }
      onClick={[Function]}
    >
      <span
        aria-controls="bui-mock-id"
        aria-expanded="true"
        aria-haspopup="true"
        onClick={[Function]}
        styled-component="true"
        test-style={Object {}}
      />
    </MockStyledComponent>
  </CustomComponent>
  <mockConstructor
    key="new-layer"
    onMount={[Function]}
    onUnmount={[Function]}
  >
    <mockConstructor
      anchorRef={
        <span
          aria-controls="bui-mock-id"
          aria-expanded="true"
          aria-haspopup="true"
          styled-component="true"
          test-style="[object Object]"
        />
      }
      arrowRef={null}
      onPopperUpdate={[Function]}
      placement="auto"
      popperOptions={
        Object {
          "modifiers": Object {
            "preventOverflow": Object {
              "enabled": true,
            },
          },
        }
      }
      popperRef={
        <div
          data-baseweb="popover"
          id="bui-mock-id"
          styled-component="true"
          test-style="[object Object]"
        >
          <div
            styled-component="true"
            test-style="[object Object]"
          >
            <strong>
              Hello world
            </strong>
          </div>
        </div>
      }
    >
      <ForwardRef
        $arrowOffset={
          Object {
            "left": 0,
            "top": 0,
          }
        }
        $isAnimating={false}
        $isOpen={true}
        $placement="auto"
        $popoverOffset={
          Object {
            "left": 0,
            "top": 0,
          }
        }
        $showArrow={false}
        data-baseweb="popover"
        id="bui-mock-id"
        key="popover-body"
      >
        <MockStyledComponent
          $arrowOffset={
            Object {
              "left": 0,
              "top": 0,
            }
          }
          $isAnimating={false}
          $isOpen={true}
          $placement="auto"
          $popoverOffset={
            Object {
              "left": 0,
              "top": 0,
            }
          }
          $showArrow={false}
          data-baseweb="popover"
          forwardedRef={
            Object {
              "current": <div
                data-baseweb="popover"
                id="bui-mock-id"
                styled-component="true"
                test-style="[object Object]"
              >
                <div
                  styled-component="true"
                  test-style="[object Object]"
                >
                  <strong>
                    Hello world
                  </strong>
                </div>
              </div>,
            }
          }
          id="bui-mock-id"
        >
          <div
            data-baseweb="popover"
            id="bui-mock-id"
            styled-component="true"
            test-style={
              Object {
                "backgroundColor": "$theme.colors.backgroundTertiary",
                "borderBottomLeftRadius": "$theme.borders.popoverBorderRadius",
                "borderBottomRightRadius": "$theme.borders.popoverBorderRadius",
                "borderTopLeftRadius": "$theme.borders.popoverBorderRadius",
                "borderTopRightRadius": "$theme.borders.popoverBorderRadius",
                "boxShadow": "$theme.lighting.shadow600",
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "top": 0,
                "transform": "translate3d(-16px, 0px, 0)",
                "transitionDuration": "0s",
                "transitionProperty": "opacity,transform",
                "transitionTimingFunction": "$theme.animation.easeOutCurve",
              }
            }
          >
            <ForwardRef
              $arrowOffset={
                Object {
                  "left": 0,
                  "top": 0,
                }
              }
              $isAnimating={false}
              $isOpen={true}
              $placement="auto"
              $popoverOffset={
                Object {
                  "left": 0,
                  "top": 0,
                }
              }
              $showArrow={false}
            >
              <MockStyledComponent
                $arrowOffset={
                  Object {
                    "left": 0,
                    "top": 0,
                  }
                }
                $isAnimating={false}
                $isOpen={true}
                $placement="auto"
                $popoverOffset={
                  Object {
                    "left": 0,
                    "top": 0,
                  }
                }
                $showArrow={false}
                forwardedRef={null}
              >
                <div
                  styled-component="true"
                  test-style={
                    Object {
                      "backgroundColor": "$theme.colors.backgroundTertiary",
                      "borderBottomLeftRadius": "$theme.borders.popoverBorderRadius",
                      "borderBottomRightRadius": "$theme.borders.popoverBorderRadius",
                      "borderTopLeftRadius": "$theme.borders.popoverBorderRadius",
                      "borderTopRightRadius": "$theme.borders.popoverBorderRadius",
                      "color": "$theme.colors.contentPrimary",
                      "position": "relative",
                    }
                  }
                >
                  <strong>
                    Hello world
                  </strong>
                </div>
              </MockStyledComponent>
            </ForwardRef>
          </div>
        </MockStyledComponent>
      </ForwardRef>
    </mockConstructor>
  </mockConstructor>
</Popover>
`;

exports[`Popover component overrides: custom popover arrow has correct props 1`] = `
<ForwardRef
  $arrowOffset={
    Object {
      "left": 0,
      "top": 0,
    }
  }
  $isAnimating={false}
  $isOpen={true}
  $placement="auto"
  $popoverOffset={
    Object {
      "left": 0,
      "top": 0,
    }
  }
  $showArrow={true}
  key="popover-arrow"
>
  <MockStyledComponent
    $arrowOffset={
      Object {
        "left": 0,
        "top": 0,
      }
    }
    $isAnimating={false}
    $isOpen={true}
    $placement="auto"
    $popoverOffset={
      Object {
        "left": 0,
        "top": 0,
      }
    }
    $showArrow={true}
    forwardedRef={
      Object {
        "current": <div
          styled-component="true"
          test-style="[object Object]"
        />,
      }
    }
  >
    <div
      styled-component="true"
      test-style={
        Object {
          "color": "red",
        }
      }
    />
  </MockStyledComponent>
</ForwardRef>
`;

exports[`Popover component overrides: custom popover body has correct props 1`] = `
<ForwardRef
  $arrowOffset={
    Object {
      "left": 0,
      "top": 0,
    }
  }
  $isAnimating={false}
  $isOpen={true}
  $placement="auto"
  $popoverOffset={
    Object {
      "left": 0,
      "top": 0,
    }
  }
  $showArrow={true}
  data-baseweb="popover"
  id="bui-mock-id"
  key="popover-body"
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
>
  <MockStyledComponent
    $arrowOffset={
      Object {
        "left": 0,
        "top": 0,
      }
    }
    $isAnimating={false}
    $isOpen={true}
    $placement="auto"
    $popoverOffset={
      Object {
        "left": 0,
        "top": 0,
      }
    }
    $showArrow={true}
    data-baseweb="popover"
    forwardedRef={
      Object {
        "current": <div
          data-baseweb="popover"
          id="bui-mock-id"
          styled-component="true"
          test-style="[object Object]"
        >
          <div
            styled-component="true"
            test-style="[object Object]"
          />
          <div
            styled-component="true"
            test-style="[object Object]"
          >
            content
          </div>
        </div>,
      }
    }
    id="bui-mock-id"
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    <div
      data-baseweb="popover"
      id="bui-mock-id"
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      styled-component="true"
      test-style={
        Object {
          "color": "green",
        }
      }
    >
      <ForwardRef
        $arrowOffset={
          Object {
            "left": 0,
            "top": 0,
          }
        }
        $isAnimating={false}
        $isOpen={true}
        $placement="auto"
        $popoverOffset={
          Object {
            "left": 0,
            "top": 0,
          }
        }
        $showArrow={true}
        key="popover-arrow"
      >
        <MockStyledComponent
          $arrowOffset={
            Object {
              "left": 0,
              "top": 0,
            }
          }
          $isAnimating={false}
          $isOpen={true}
          $placement="auto"
          $popoverOffset={
            Object {
              "left": 0,
              "top": 0,
            }
          }
          $showArrow={true}
          forwardedRef={
            Object {
              "current": <div
                styled-component="true"
                test-style="[object Object]"
              />,
            }
          }
        >
          <div
            styled-component="true"
            test-style={
              Object {
                "color": "red",
              }
            }
          />
        </MockStyledComponent>
      </ForwardRef>
      <ForwardRef
        $arrowOffset={
          Object {
            "left": 0,
            "top": 0,
          }
        }
        $isAnimating={false}
        $isOpen={true}
        $placement="auto"
        $popoverOffset={
          Object {
            "left": 0,
            "top": 0,
          }
        }
        $showArrow={true}
      >
        <MockStyledComponent
          $arrowOffset={
            Object {
              "left": 0,
              "top": 0,
            }
          }
          $isAnimating={false}
          $isOpen={true}
          $placement="auto"
          $popoverOffset={
            Object {
              "left": 0,
              "top": 0,
            }
          }
          $showArrow={true}
          forwardedRef={null}
        >
          <div
            styled-component="true"
            test-style={
              Object {
                "color": "blue",
              }
            }
          >
            content
          </div>
        </MockStyledComponent>
      </ForwardRef>
    </div>
  </MockStyledComponent>
</ForwardRef>
`;

exports[`Popover component overrides: custom popover inner has correct props 1`] = `
<ForwardRef
  $arrowOffset={
    Object {
      "left": 0,
      "top": 0,
    }
  }
  $isAnimating={false}
  $isOpen={true}
  $placement="auto"
  $popoverOffset={
    Object {
      "left": 0,
      "top": 0,
    }
  }
  $showArrow={true}
>
  <MockStyledComponent
    $arrowOffset={
      Object {
        "left": 0,
        "top": 0,
      }
    }
    $isAnimating={false}
    $isOpen={true}
    $placement="auto"
    $popoverOffset={
      Object {
        "left": 0,
        "top": 0,
      }
    }
    $showArrow={true}
    forwardedRef={null}
  >
    <div
      styled-component="true"
      test-style={
        Object {
          "color": "blue",
        }
      }
    >
      content
    </div>
  </MockStyledComponent>
</ForwardRef>
`;
